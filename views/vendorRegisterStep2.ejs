<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Complete Your Vendor Registration</title>
    <!-- Favicon -->
    <link rel="icon" href="/favicon/favicon.ico" type="image/x-icon">
    <link rel="shortcut icon" href="/favicon/favicon.ico" type="image/x-icon">
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            overflow-x: hidden;
        }
        .vendor-banner {
            background: linear-gradient(135deg, #4CAF50, #8BC34A);
            color: white;
            padding: 2rem;
            margin-bottom: 1.5rem;
            border-radius: 0 0 20px 20px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .form-container {
            background-color: white;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
        }
        .btn-primary {
            background-color: #4CAF50;
            border-color: #4CAF50;
            padding: 10px 25px;
            font-weight: 600;
        }
        .btn-primary:hover {
            background-color: #3d8b40;
            border-color: #3d8b40;
        }
        .form-control:focus {
            border-color: #4CAF50;
            box-shadow: 0 0 0 0.25rem rgba(76, 175, 80, 0.25);
        }
        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
        }
        .progress-container {
            margin-bottom: 2rem;
        }
        .progress {
            height: 8px;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="vendor-banner text-center">
        <h1>Complete Your Vendor Profile</h1>
        <p class="mb-0">Step 2 of 2 - Additional Information</p>
    </div>

    <div class="container">
        <div class="progress-container">
            <div class="progress">
                <div class="progress-bar bg-success" role="progressbar" style="width: 100%;" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
            <div class="d-flex justify-content-between mt-2">
                <span>Basic Info</span>
                <span>Additional Details</span>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="form-container">
                    <%- include('../partials/messages') %>

                    <form action="/vendor/register/step2" method="POST" id="vendorRegistrationStep2Form" class="needs-validation" enctype="multipart/form-data" novalidate>
                        <div class="form-group mt-4">
                            <label for="ownerName" class="form-label">Owner's Name</label>
                            <input type="text" id="ownerName" name="ownerName" class="form-control form-control-lg" 
                                placeholder="Enter owner's full name" 
                                value="<%= locals.inputData ? inputData.ownerName : '' %>"
                                required>
                            <div class="invalid-feedback">Please enter the owner's name.</div>
                        </div>
                        <div class="form-group">
                            <label for="phone" class="form-label">Contact Number</label>
                            <input type="tel" id="phone" name="phone" class="form-control form-control-lg" 
                                required pattern="[0-9]{10}" 
                                placeholder="Enter 10-digit phone number"
                                value="<%= locals.inputData ? inputData.phone : '' %>">
                            <div class="invalid-feedback">Please enter a valid 10-digit phone number.</div>
                        </div>
                        <div class="form-group">
                            <label for="address" class="form-label">Business Address</label>
                            <input type="text" id="address" name="address" class="form-control form-control-lg" 
                                required placeholder="Enter your business address"
                                value="<%= locals.inputData ? inputData.address : '' %>">
                            <div class="invalid-feedback">Please enter your business address.</div>
                        </div>
                        <div class="form-group">
                            <label for="description" class="form-label">Business Description</label>
                            <textarea id="description" name="description" class="form-control form-control-lg" rows="3" placeholder="Tell us about your business (optional)"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="logo" class="form-label">Business Logo (Optional)</label>
                            <input type="file" id="logo" name="logo" class="form-control form-control-lg">
                            <div class="form-text">Upload a logo image for your business profile</div>
                        </div>
                        <div class="form-group">
                            <label for="bankDetails" class="form-label">Bank Details (Optional)</label>
                            <input type="text" id="bankDetails" name="bankDetails" class="form-control form-control-lg" placeholder="Enter your bank account details for payments">
                            <div class="form-text">Your bank details will be used for payment processing</div>
                        </div>
                        
                        <div class="d-flex justify-content-between mt-4">
                            <a href="/vendor/register" class="btn btn-outline-secondary">Back to Step 1</a>
                            <button type="submit" class="btn btn-primary">Complete Registration</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Form validation
        (function() {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            
            Array.from(forms).forEach(function(form) {
                // Function to add whitespace validation to an input
                function addWhitespaceValidation(input) {
                    if (!input) return;
                    
                    // Add input event listener
                    input.addEventListener('input', function() {
                        // Check for leading and trailing whitespace
                        if (this.value.startsWith(' ') || this.value.endsWith(' ')) {
                            this.setCustomValidity('Input cannot start or end with spaces');
                            this.classList.add('is-invalid');
                        // Check for multiple consecutive spaces in the middle of text
                        } else if (/\s{2,}/.test(this.value)) {
                            this.setCustomValidity('Input cannot contain consecutive spaces');
                            this.classList.add('is-invalid');
                        } else {
                            this.setCustomValidity('');
                            if (this.classList.contains('is-invalid') && this.checkValidity()) {
                                this.classList.remove('is-invalid');
                            }
                        }

                        // Auto-trim the value if it has leading/trailing spaces
                        if (this.value !== this.value.trim()) {
                            this.value = this.value.trim();
                        }
                    });
                    
                    // Add blur event to trim value
                    input.addEventListener('blur', function() {
                        this.value = this.value.trim();
                        
                        // Recheck validity
                        if (/\s{2,}/.test(this.value)) {
                            this.setCustomValidity('Input cannot contain consecutive spaces');
                            this.classList.add('is-invalid');
                        } else {
                            this.setCustomValidity('');
                            if (this.classList.contains('is-invalid') && this.checkValidity()) {
                                this.classList.remove('is-invalid');
                            }
                        }
                    });
                    
                    // Initial check on page load
                    if (input.value) {
                        if (input.value.startsWith(' ') || input.value.endsWith(' ')) {
                            input.value = input.value.trim();
                        }
                        if (/\s{2,}/.test(input.value)) {
                            input.setCustomValidity('Input cannot contain consecutive spaces');
                            input.classList.add('is-invalid');
                        }
                    }
                }
                
                // Get all text-based inputs in the form
                const textInputs = form.querySelectorAll('input[type="text"], input[type="tel"], input[type="email"], textarea');
                
                // Apply whitespace validation to each input
                textInputs.forEach(addWhitespaceValidation);
                
                // Add specific validation for phone field
                const phoneInput = form.querySelector('#phone');
                if (phoneInput) {
                    phoneInput.addEventListener('input', function() {
                        // Remove any non-numeric characters
                        this.value = this.value.replace(/\D/g, '');
                        
                        if (this.value.length !== 10) {
                            this.setCustomValidity('Phone number must be exactly 10 digits');
                            this.classList.add('is-invalid');
                        } else {
                            this.setCustomValidity('');
                            if (this.classList.contains('is-invalid')) {
                                this.classList.remove('is-invalid');
                            }
                        }
                    });
                }
                
                // Add specific validation for owner name
                const ownerNameInput = form.querySelector('#ownerName');
                if (ownerNameInput) {
                    ownerNameInput.addEventListener('input', function() {
                        if (this.value.length < 3) {
                            this.setCustomValidity('Owner name must be at least 3 characters');
                            this.classList.add('is-invalid');
                        } else if (/\s{2,}/.test(this.value)) {
                            this.setCustomValidity('Owner name cannot contain consecutive spaces');
                            this.classList.add('is-invalid');
                        } else if (/[0-9]/.test(this.value)) {
                            this.setCustomValidity('Owner name should not contain numbers');
                            this.classList.add('is-invalid');
                        } else {
                            this.setCustomValidity('');
                            if (this.classList.contains('is-invalid') && this.checkValidity()) {
                                this.classList.remove('is-invalid');
                            }
                        }
                    });
                }
                
                // Add validation for address
                const addressInput = form.querySelector('#address');
                if (addressInput) {
                    addressInput.addEventListener('input', function() {
                        if (this.value.length < 5) {
                            this.setCustomValidity('Address must be at least 5 characters');
                            this.classList.add('is-invalid');
                        } else if (/\s{2,}/.test(this.value)) {
                            this.setCustomValidity('Address cannot contain consecutive spaces');
                            this.classList.add('is-invalid');
                        } else {
                            this.setCustomValidity('');
                            if (this.classList.contains('is-invalid') && this.checkValidity()) {
                                this.classList.remove('is-invalid');
                            }
                        }
                    });
                }
                
                form.addEventListener('submit', function(event) {
                    // Check for leading whitespace one more time before submit
                    let hasValidationError = false;
                    
                    textInputs.forEach(input => {
                        // Trim values before final validation
                        if (input.value) {
                            input.value = input.value.trim();
                        }
                        
                        // Check for consecutive spaces
                        if (/\s{2,}/.test(input.value)) {
                            input.setCustomValidity('Input cannot contain consecutive spaces');
                            input.classList.add('is-invalid');
                            hasValidationError = true;
                        }
                    });
                    
                    // Check form validity first
                    if (!form.checkValidity() || hasValidationError) {
                        event.preventDefault();
                        event.stopPropagation();
                        form.classList.add('was-validated');
                        return;
                    }
                    
                    // Check file size if a file is selected
                    const logoInput = document.getElementById('logo');
                    if (logoInput.files.length > 0) {
                        const fileSize = logoInput.files[0].size;
                        const maxSize = 5 * 1024 * 1024; // 5MB
                        
                        if (fileSize > maxSize) {
                            alert('File size exceeds 5MB. Please choose a smaller file.');
                            event.preventDefault();
                            event.stopPropagation();
                            return;
                        }
                        
                        // Check file type
                        const fileName = logoInput.files[0].name;
                        const fileExt = fileName.split('.').pop().toLowerCase();
                        const allowedExts = ['jpg', 'jpeg', 'png', 'gif'];
                        
                        if (!allowedExts.includes(fileExt)) {
                            alert('Only image files (JPG, JPEG, PNG, GIF) are allowed.');
                            event.preventDefault();
                            event.stopPropagation();
                            return;
                        }
                    }
                    
                    form.classList.add('was-validated');
                });
            });
        })();
    </script>
</body>
</html> 